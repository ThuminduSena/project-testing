# .github/workflows/ci-injection-demo.yml
name: CI Injection Demo (VULNERABLE)

on:
  # DANGEROUS: runs with repo-level tokens on code from forks
  pull_request_target:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      script_url:
        description: "URL to a shell script to run (DANGEROUS)"
        required: false
        default: ""

permissions: write-all # overly broad on purpose

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # VULN: pulls untrusted user-controlled data into env
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_BODY:  ${{ github.event.pull_request.body }}
    steps:
      - name: Checkout PR head (UNTRUSTED CODE with elevated perms)
        # VULN: running untrusted PR code using pull_request_target context
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Leak secret to logs (for demo)
        # VULN: prints secrets; they can be exfiltrated by untrusted steps
        env:
          SUPER_SECRET: ${{ secrets.SUPER_SECRET }}
        run: |
          echo "Secret is: $SUPER_SECRET"   # <-- intentionally leaking for demo

      - name: Command injection via PR title
        # VULN: executes user-controlled value in a shell
        run: |
          echo "Running title as command (DANGEROUS)"
          bash -lc "$PR_TITLE"              # e.g., PR title: echo HACKED

      - name: Source untrusted PR body as env
        # VULN: PR body could contain something like: FOO=$(echo HACKED); echo $FOO
        run: |
          printf "%s\n" "$PR_BODY" > .env
          # DANGEROUS: executes anything in PR body
          set -a
          . ./.env
          set +a
          echo "Loaded env from PR body"

      - name: Curl | bash from user input
        if: ${{ github.event.inputs.script_url != '' }}
        # VULN: arbitrary remote code exec from an unvalidated URL
        run: |
          echo "Fetching and executing ${{ github.event.inputs.script_url }}"
          curl -fsSL "${{ github.event.inputs.script_url }}" | bash
