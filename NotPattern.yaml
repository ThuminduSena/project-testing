name: CI/CD with SAST (Non-Push-to-Branch)

on:
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: '0 2 * * *'  # Daily run at 2 AM

permissions:
  contents: read
  security-events: write

jobs:
  setup_environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install semgrep bandit

  pull_request_sast:
    name: Pull Request Static Analysis
    runs-on: ubuntu-latest
    needs: setup_environment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # üîç Run SAST Tools
      - name: Run Semgrep
        run: semgrep --config auto --error --json --output semgrep-report.json || echo "Semgrep found issues"

      - name: Run Bandit
        run: bandit -r . -f json -o bandit-report.json || echo "Bandit found issues"

      # ‚úÖ Upload results
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-report.json

      - name: Enforce Security Threshold
        if: always()
        run: |
          CRITICAL_COUNT=$(grep -o '"severity": *"ERROR"' semgrep-report.json bandit-report.json | wc -l)
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "‚ùå Critical SAST issues detected ($CRITICAL_COUNT)."
          else
            echo "‚úÖ No critical SAST issues."

  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: setup_environment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Project
        run: |
          python setup.py build || true

      - name: Run Tests
        run: pytest tests/ --maxfail=2 --disable-warnings -q || true

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [pull_request_sast, build_and_test]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy
        run: echo "Deploy scripts here"
